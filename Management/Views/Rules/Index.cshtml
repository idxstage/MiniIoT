@{
    ViewData["Title"] = "Rules management";
}

<style>
    th.dt-center, td.dt-center {
        text-align: center;
    }

    tr {
        font-size: 90%;
        padding: .0.75rem;
    }

    td {
        padding: 0px;
    }

    .label {
        display: inline;
        padding: .2em .6em .3em;
        font-size: 75%;
        font-weight: 700;
        line-height: 2;
        color: #fff;
        text-align: center;
        white-space: nowrap;
        vertical-align: baseline;
        border-radius: .25em;
    }

    table.dataTable tbody tr.selected {
        background-color: rgba(0,0,0,.075);
        color: #212529;
    }

    .label-info {
        background-color: #d9534f;
    }

    .bootstrap-tagsinput {
        width: 100%;
        line-height: 25px;
    }

    div.dts tbody td {
        vertical-align: middle;
    }

    div.dts div.dataTables_scrollBody {
        background: none !important;
    }

    .dataTables_scrollHeadInner, .table {
        width: 100% !important;
    }




    .tt-input, /* UPDATE: newer versions use tt-input instead of tt-query */
    .tt-hint {
        display: block;
        width: 100%;
        height: calc(1.5em + .75rem + 2px);
        padding: .375rem .75rem;
        font-size: 1rem;
        font-weight: 400;
        line-height: 1.5;
        color: #495057;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid #ced4da;
        border-radius: .25rem;
        transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
    }

    .tt-input { /* UPDATE: newer versions use tt-input instead of tt-query */
        box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
    }

    .tt-hint {
        color: #999;
    }

    .tt-menu { /* UPDATE: newer versions use tt-menu instead of tt-dropdown-menu */
        width: 422px;
        margin-top: 12px;
        padding: 8px 0;
        background-color: #fff;
        border: 1px solid #ccc;
        border: 1px solid rgba(0, 0, 0, 0.2);
        border-radius: 8px;
        box-shadow: 0 5px 10px rgba(0,0,0,.2);
    }

    .tt-suggestion {
        padding: 3px 20px;
        font-size: 18px;
        line-height: 24px;
    }

        .tt-suggestion.tt-cursor { /* UPDATE: newer versions use .tt-suggestion.tt-cursor */
            color: #fff;
            background-color: #0097cf;
        }

        .tt-suggestion p {
            margin: 0;
        }
</style>

<link href="~/lib/bootstrap-tagsinput-latest/src/bootstrap-tagsinput.css" rel="stylesheet" />

<link href="~/lib/DataTables/datatables.css" rel="stylesheet" />

<link href="~/lib/sweetalert2/sweetalert2.css" rel="stylesheet" />
<div class="text-center">
    <h1 class="display-4">Gestione delle rules</h1>
</div>

<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="card card-primary card-outline mt-3">
                    <div class="card-header">
                        <button class="btn btn-primary float-right" id="newRule">NUOVA RULE</button>
                    </div>
                    <div class="card-body">
                        <table id="rules" class="table table-sm table-hover responsive" style="width: 100%">
                            <thead>
                                @*<th>Id</th>*@
                            <th>Name</th>
                            <th>Machine</th>
                            <th>Severity</th>
                            <th>Frequency</th>
                            <th>Period</th>
                            <th>Field</th>
                            <th>ConditionOperator</th>
                            <th>Value</th>
                            <th></th>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<div id="modal_container"></div>


@section Scripts {
    <script src="~/lib/jquery-typeahead/typeahead.bundle.js"></script>

    <script src="~/lib/bootstrap-tagsinput-latest/src/bootstrap-tagsinput.js"></script>

    <script src="~/lib/DataTables/datatables.js"></script>
    <script src="~/lib/sweetalert2/sweetalert2.js"></script>

    <script>
        $(document).ready(function () {


            var edit = false;

            //apertura form modale
            $("body").on("click", "#newRule", function () {
                $("#modal_container").empty();
                edit = false;
                    $.get("@Url.Action("Modal","Rules", new { mode = "add" })", function (data) {
                        $("#modal_container").append(data);
                        $("#modal").modal("show");



                        var machines = new Bloodhound({
                            datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                            queryTokenizer: Bloodhound.tokenizers.whitespace,
                            prefetch: {
                                url: "@Url.Action("GetMachines","Rules")",
                                filter: function (list) {
                                    return $.map(list, function (machine) {
                                        return { name: machine };
                                    });
                                }
                            }
                        });
                        machines.initialize();



                        $('#machine').tagsinput({
                            freeInput: true,
                            typeaheadjs: {
                                name: 'machines',
                                displayKey: 'name',
                                valueKey: 'name',
                                source: machines.ttAdapter()
                            }
                        });
                    });
            });


            $('body').on('itemRemoved', "#machine", function (event) {
                updateField();
            });

            $('body').on('itemAdded', "#machine", function (event) {
                if(!edit)
                    updateField();
            });

            function updateField() {
                //ottengo lista dispositivi inseriti dall'utente

                var machinesNames = $("#machine").tagsinput('items');

                //richiesta al database dell'intersezione dei field di questi dispositivi

                var obj;

                $.ajax({
                    url: "@Url.Action("GetFieldsByMachines", "Rules")",
                    type: "GET",
                    traditional: true,
                    data: { machines : machinesNames },
                    success: function (response) {
                        obj = response;
                        var fields = new Bloodhound({
                            datumTokenizer: Bloodhound.tokenizers.whitespace,
                            queryTokenizer: Bloodhound.tokenizers.whitespace,
                            local: obj
                        });

                        $('#machines_field').typeahead({
                            hint: true,
                            highlight: true,
                            minLength: 1
                        },
                            {
                                name: 'fields',
                                source: fields
                            });
                    },
                    error: function (response) {

                    }
                });
            }


            $("body").on("click", ".editRule", function () {
                var data = table.row($(this).closest('tr')).data();
                var _id = data.id;
                $("#modal_container").empty();
                edit = true;

                    $.get("@Url.Action("Modal","Rules")" + "?mode=" + "edit&id=" + _id, function (data) {
                        $("#modal_container").append(data);
                        $("#modal").modal("show");
                        var machines = new Bloodhound({
                        datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                        queryTokenizer: Bloodhound.tokenizers.whitespace,
                        prefetch: {
                            url: "@Url.Action("GetMachines","Rules")",
                            filter: function (list) {
                                return $.map(list, function (machine) {
                                    return { name: machine };
                                });
                            }
                        }
                    });
                    machines.initialize();



            $('#machine').tagsinput({
                freeInput: true,
                typeaheadjs: {
                    name: 'machines',
                    displayKey: 'name',
                    valueKey: 'name',
                    source: machines.ttAdapter()
                }
            });
        });
                    });
           







               $("body").on("click", ".deleteRule", function () {
	            var data = table.row($(this).closest('tr')).data();
	            var _id = data.id;
	            Swal.fire({
		            title: 'Eliminazione regola',
		            text: "Sei sicuro di eliminare la regola selezionata?",
		            icon: 'warning',
		            showCancelButton: true,
		            confirmButtonColor: '#3085d6',
		            cancelButtonColor: '#d33',
		            confirmButtonText: 'Conferma eliminazione!'
	            }).then((result) => {
		            if (result.value) {
			            //eliminazione, connessione al server
			            $.get("@Url.Action("DeleteRule", "Rules")" + "?id=" + _id).done(function (data) {
					            if (data.result) {
						            Swal.fire({
							            type: 'success',
							            title: 'Regola eliminata con successo!'
						            });
						            //reload tabella
						            $('#rules').DataTable().ajax.reload();
					            }
				            }).fail(function (data) {
					            Swal.fire({
						            type: 'error',
						            title: 'Impossibile completare l\'operazione! Riprova più tardi.'
					            });
				            });
		            }
	            })
            });


            $('body').on('keyup keypress', "#submitForm", function (e) {
                var keyCode = e.keyCode || e.which;
                if (keyCode === 13) {
                    e.preventDefault();
                    return false;
                }
            });


        function serializeForm() {
            var formdata = $("form").serializeArray();
            var data = {};

            //serialize actions

            $(formdata).each(function (index, obj) {
                data[obj.name] = obj.value;
            });

            data['actions'] = [];
            $('#actions tbody').find('tr').each(function () {
                var obj = {};
                $(this).find('td').each(function () {
                    var th = $('#actions th').eq($(this).index());
                    if (th != "actions") {
                        var key = th.text();
                        var value = $(this).text();
                        obj[key] = value;
                    }
                });
                data['actions'].push(obj);
            });

            //serialize machine

            var machine = $("#machine").tagsinput('items');
            data['Machine'] = machine;
            return data;
        }

        $("body").on("click", ".btnDeleteRow", function () {
            $(this).closest('tr').remove();
        });

        $("body").on("click", "#edit_rule", function () {
            //abilito elementi
            $(".rule_input").prop("disabled", false)
            //nascondi pulsante Modifica
            $("#edit_rule").prop("hidden", true);
            //mostro pulsante Conferma
            $("#confirm_edit").prop("hidden", false);

            edit = false;
            updateField();
        });

            $("body").on("click", "#confirm_edit", function () {
                var valid = $('#submitForm').valid();
                if (valid) {


                    var data = serializeForm();


                    $.post("@Url.Action("UpdateRule","Rules")", data)
                        .done(function (data) {
                            if (data.result) {

                                //modificato con successo, disabilito elementi
                                $(".rule_input").prop("disabled", true)
                                //nascondi pulsante Modifica
                                $("#edit_rule").prop("hidden", false);
                                //mostro pulsante Conferma
                                $("#confirm_edit").prop("hidden", true);
                                Swal.fire({
                                    type: 'success',
                                    title: 'Rule modificata correttamente!'
                                });
                                //reload elementi tabella
                                $('#rules').DataTable().ajax.reload();
                            }


                        }).fail(function (data) {


                        });
                }
            });






        //inserimento rule nella tabella
        $("body").on("click","#nuovaAction", function () {

            var type = $("#type").find(":selected").text();;
            var address = $("#address").val();
            var body = $("#body").val();

            if (!type || !address)
                 return;

            $('#actions tbody').append(`<tr><td>${type}</td><td>${address}</td><td>${body}</td><td><button class="btnDeleteRow btn btn-outline-danger btn-sm">Delete</button></td></tr>`);
            $('.action_input').val('');

        });

            $('body').on("submit", "#submitForm", function (e) {
            e.preventDefault();
            e.stopPropagation();
            var valid = $('#submitForm').valid();
            if (valid) {

                var data = serializeForm();

                $.post(this.action, data)
                    .done(function (data) {
                        if (data.result) {
                            $("#modal").modal("hide");
                            $("#modal_container").empty();
                            $('.modal-backdrop').remove();
                            Swal.fire({
                                type: 'success',
                                title: 'Rule inserita con successo nel database!'
                            });
                            //reload tabella
                            $('#rules').DataTable().ajax.reload();
                        }


                    }).fail(function (data) {


                    });

            }


        });



            var table = $('#rules').DataTable({
                searching: true,
                ordering: true,
                autoWidth: true,
                processing: true,
                serverSide: true,
                paging: true,
                select: false,
                ajax: {
                    url: "/rules/LoadRules",
                    type: "POST"
                },
                language: {
                    url: "/../../dist/language/Italian.json"
                },
                columns: [

                    //{
                    //    "data": "id",
                    //    "name": "Id",
                    //    "autoWidth": true,
                    //    defaultContent: ""
                    //},
                    {
                        "data": "name",
                        "name": "Name",
                        "autoWidth": true,
                        defaultContent: ""

                    },
                    {
                        "data": "machine",
                        "name": "Machine",
                        "autoWidth": true,
                        "render": function (data, type, row) {
                            //TODO
                            return data;
                        },
                        defaultContent: ""
                    },
                    {
                        "data": "severity",
                        "name": "Severity",
                        "autoWidth": true,
                        defaultContent: ""

                    },
                    {
                        "data": "frequency",
                        "name": "Frequency",
                        "autoWidth": true,
                        defaultContent: ""

                    },
                    {
                        "data": "period",
                        "name": "Period",
                        "autoWidth": true,
                        defaultContent: ""
                    },
                    {
                        "data": "field",
                        "name": "Field",
                        "autoWidth": true,
                        defaultContent: ""
                    },
                    {
                        "data": "conditionOperator",
                        "name": "ConditionOperator",
                        "autoWidth": true,
                        defaultContent: ""
                    },
                    {
                        "data": "value",
                        "name": "Value",
                        "autoWidth": true,
                        defaultContent: ""
                    },
                    {
                        "autoWidth": true,
                        defaultContent: '<div class="btn-group">\
                                             <button class= "btn btn-outline-primary btn-sm mr-1 editRule" >Modifica</button> \
                                             <button class="btn btn-outline-danger btn-sm deleteRule">Elimina</button></div >'
                    }
                ]
            });
        });
    </script>
}


